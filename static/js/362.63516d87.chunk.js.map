{"version":3,"file":"static/js/362.63516d87.chunk.js","mappings":"oOACA,EAA6B,8B,SCKd,SAASA,EAAT,GAAuC,IAAlBC,EAAiB,EAAjBA,cAClC,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,MASAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQN,EAAaO,IAAI,SAC3BD,IACFF,EAASE,GACTR,EAAcQ,GAEjB,GAAE,CAACN,IAQJ,OACE,0BACE,kBAAMQ,UAAWC,EAAgBC,SARhB,SAAAC,GACnBA,EAAEC,iBACFX,EAA0B,KAAVE,EAAe,CAAEG,MAAOH,GAAU,CAAC,GACnDL,EAAcK,EACf,EAIG,WACE,kBACEU,KAAK,OACLC,KAAK,SACLC,MAAOZ,EACPa,SA5BS,SAAAL,GACf,IAAQI,EAAUJ,EAAEM,OAAZF,MAERJ,EAAEC,iBACFR,EAASW,EACV,EAwBOG,GAAG,YAEL,mBAAQL,KAAK,SAAb,wBAIP,CC5CD,MAA8B,kCAA9B,EAA6E,iCAA7E,EAA8H,oCAA9H,EAAoL,sCAApL,EAAuO,iC,SCKxN,SAASM,EAAT,GAAwC,IAAjBC,EAAgB,EAAhBA,aAC9BC,GAAWC,EAAAA,EAAAA,MAEjB,OADAjB,EAAAA,EAAAA,YAAU,WAAQ,KAEhB,gBAAKG,UAAWC,EAAhB,SACGW,EAAaG,OAAS,IACrB,eAAIf,UAAWC,EAAf,SACGW,EAAaI,KAAI,gBAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,MAAOR,EAAvB,EAAuBA,GAAvB,OAChB,eAAIV,UAAWC,EAAf,UACE,UAAC,KAAD,CAAMN,MAAO,CAAEwB,KAAMN,GAAYO,GAAE,UAAKV,GAAxC,UACGO,GACC,gBACEjB,UAAWC,EACXoB,IAAG,0CAAqCJ,GACxCK,IAAKJ,KAGP,gBACElB,UAAWC,EACXoB,IAAG,mDAA8CH,GACjDI,IAAKJ,KAGT,eAAIlB,UAAWC,EAAf,SAAgCiB,QAfGR,EADvB,OAwB3B,CChCc,SAASa,IACtB,OAA4BC,EAAAA,EAAAA,YAAWC,EAAAA,GAEvC,GAFA,EAAQ9B,MAAR,EAAeC,UAEyBF,EAAAA,EAAAA,UAAS,KAAjD,eAAOkB,EAAP,KAAqBc,EAArB,KAaA,OACE,4BACE,SAACrC,EAAD,CAAWC,cAbK,SAAAiB,GACdA,EAAMoB,KAAK,KAAKZ,OAAS,GAC3Ba,MAAM,qDAAD,OACkDC,EAAAA,EADlD,iCACiFtB,EADjF,gCAGFuB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GACJP,EAAgBO,EAAKC,SAAW,GACjC,GAEN,KAIG,SAAC,EAAD,CAActB,aAAcA,MAGjC,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Searchbar/searchbar.module.css?5778","components/Searchbar/Searchbar.jsx","webpack://goit-react-hw-05-movies/./src/pages/MovieThumbs/MoviesThumbs.module.css?c07b","pages/MovieThumbs/MoviesThumbs.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"searchbar_searchForm__jIF+P\"};","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { apiKey } from '../../pages/Home/Home';\nimport css from './searchbar.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Searchbar({ submitHandler }) {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [state, setState] = useState('');\n\n  const onSearch = e => {\n    const { value } = e.target;\n\n    e.preventDefault();\n    setState(value);\n  };\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (query) {\n      setState(query);\n      submitHandler(query);\n    }\n  }, [searchParams]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams(state !== '' ? { query: state } : {});\n    submitHandler(state);\n  };\n\n  return (\n    <div>\n      <form className={css.searchForm} onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"search\"\n          value={state}\n          onChange={onSearch}\n          id=\"search\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n}\nSearchbar.propTypes = {\n  submitHandler: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"posterImage\":\"MoviesThumbs_posterImage__WsZ-1\",\"thumbsList\":\"MoviesThumbs_thumbsList__xYLfr\",\"thumbListItem\":\"MoviesThumbs_thumbListItem__DcABW\",\"thumbsContainer\":\"MoviesThumbs_thumbsContainer__AfCI7\",\"movieTitle\":\"MoviesThumbs_movieTitle__+fXwz\"};","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport css from './MoviesThumbs.module.css';\nimport PropTypes from 'prop-types';\n\nimport { useLocation } from 'react-router-dom';\nexport default function MovieThumbs({ moviesSearch }) {\n  const location = useLocation();\n  useEffect(() => {});\n  return (\n    <div className={css.thumbsContainer}>\n      {moviesSearch.length > 0 && (\n        <ul className={css.thumbsList}>\n          {moviesSearch.map(({ poster_path, title, id }) => (\n            <li className={css.thumbListItem} key={id}>\n              <Link state={{ from: location }} to={`${id}`}>\n                {poster_path ? (\n                  <img\n                    className={css.posterImage}\n                    src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                    alt={title}\n                  />\n                ) : (\n                  <img\n                    className={css.posterImage}\n                    src={`https://via.placeholder.com/200x300?text=${title}`}\n                    alt={title}\n                  />\n                )}\n                <h2 className={css.movieTitle}>{title}</h2>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\nMovieThumbs.propTypes = {\n  moviesSearch: PropTypes.arrayOf(PropTypes.object),\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { QueryContext } from '../../App';\nimport Searchbar from '../../components/Searchbar/Searchbar';\nimport MoviesThumbs from '../../pages/MovieThumbs';\nimport { apiKey } from '../Home/Home';\nexport default function Movies() {\n  const { state, setState } = useContext(QueryContext);\n\n  const [moviesSearch, setMoviesSearch] = useState([]);\n\n  const handleFetch = value => {\n    if (value.trim(' ').length > 0) {\n      fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${value}&page=1&include_adult=false`\n      )\n        .then(response => response.json())\n        .then(data => {\n          setMoviesSearch(data.results || []);\n        });\n    }\n  };\n  return (\n    <div>\n      <Searchbar submitHandler={handleFetch} />\n      <MoviesThumbs moviesSearch={moviesSearch} />\n    </div>\n  );\n}\n"],"names":["Searchbar","submitHandler","useSearchParams","searchParams","setSearchParams","useState","state","setState","useEffect","query","get","className","css","onSubmit","e","preventDefault","type","name","value","onChange","target","id","MovieThumbs","moviesSearch","location","useLocation","length","map","poster_path","title","from","to","src","alt","Movies","useContext","QueryContext","setMoviesSearch","trim","fetch","apiKey","then","response","json","data","results"],"sourceRoot":""}